name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - main

jobs:
  build_backend:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.1'

      - name: Install Composer
        run: |
          sudo apt update
          sudo apt install curl php-cli php-mbstring git unzip -qy
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer
          php -r "unlink('composer-setup.php');"
          alias composer='/usr/local/bin/composer'
          composer self-update --1

      - name: Install dependencies and build
        run: |
          cd back
          cp .env.example .env
          composer install --no-interaction --prefer-dist --optimize-autoloader
          php artisan key:generate

      - name: Cache vendor directory
        uses: actions/cache@v2
        with:
          path: back/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('app/back/composer.lock') }}

            #- name: Archive artifacts
            #uses: actions/upload-artifact@v2
            #with:
            #name: backend-artifact
            #path: back/vendor

  test_backend:
    runs-on: self-hosted
    needs: build_backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.1'

      - name: Install dependencies
        run: |
          cd back
          composer self-update --1
          composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Run tests
        run: |
          cd back
          vendor/bin/phpunit ./tests/Unit

  deploy:
    runs-on: self-hosted
    needs: [build_backend, test_backend]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      #- name: Download artifacts
        #uses: actions/download-artifact@v2
        #with:
        #name: backend-artifact
        #path: back/vendor

      - name: Deploy
        # Add your deployment steps here
        run: echo "Deploying..."

      # Add more deployment steps if necessary
